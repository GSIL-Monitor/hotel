//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mzl.BLL.Tool.EtermCommand {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EtermCommand.EtermOrderSoap")]
    public interface EtermOrderSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AVOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode AVOrder(string start_city, string arrive_city, string date, string[] args, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AVOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> AVOrderAsync(string start_city, string arrive_city, string date, string[] args, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FDOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode FDOrder(string start_city, string arrive_city, string date, string airline, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FDOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> FDOrderAsync(string start_city, string arrive_city, string date, string airline, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FFOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode FFOrder(string airline, string date, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FFOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> FFOrderAsync(string airline, string date, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SDOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SDOrder(string air_info, string person_info, string tktl_minutes, string[] args, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SDOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SDOrderAsync(string air_info, string person_info, string tktl_minutes, string[] args, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/XEPNROrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string XEPNROrder(string pnr, string xeticketed, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/XEPNROrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> XEPNROrderAsync(string pnr, string xeticketed, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ETDZOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ETDZOrder(string pnr, string officecode, string customercode, string printid, string[] args, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ETDZOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ETDZOrderAsync(string pnr, string officecode, string customercode, string printid, string[] args, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TSSOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TSSOrder(string ticket, string mode, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TSSOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TSSOrderAsync(string ticket, string mode, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PRINVOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PRINVOrder(string ticket, string ittn, string officecode, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PRINVOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PRINVOrderAsync(string ticket, string ittn, string officecode, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VTINVOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VTINVOrder(string ticket, string ittn, string officecode, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VTINVOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> VTINVOrderAsync(string ticket, string ittn, string officecode, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RTOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode RTOrder(string pnr, string hk, string get_ticket, string get_price, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RTOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> RTOrderAsync(string pnr, string hk, string get_ticket, string get_price, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RTOrderMyUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode RTOrderMyUser(string pnr, string UserName, string UserPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RTOrderMyUser", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> RTOrderMyUserAsync(string pnr, string UserName, string UserPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RTUOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode RTUOrder(string pnr, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RTUOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> RTUOrderAsync(string pnr, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PATOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode PATOrder(string pnr, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PATOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> PATOrderAsync(string pnr, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PATOrderByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode PATOrderByCode(string pnr, int id, string clientCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PATOrderByCode", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> PATOrderByCodeAsync(string pnr, int id, string clientCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PATOrderNoCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode PATOrderNoCode(string pnr, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PATOrderNoCode", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> PATOrderNoCodeAsync(string pnr, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PATEXOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode PATEXOrder(string air_info, string officecode, string allprice, string apply, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PATEXOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> PATEXOrderAsync(string air_info, string officecode, string allprice, string apply, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DETROrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode DETROrder(string ticket, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DETROrder", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> DETROrderAsync(string ticket, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DETNOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode DETNOrder(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DETNOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> DETNOrderAsync(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RAWOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RAWOrder(string ins, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RAWOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RAWOrderAsync(string ins, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RAWOrder255", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RAWOrder255(string ins);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RAWOrder255", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RAWOrder255Async(string ins);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RAWOrderRT", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RAWOrderRT(string ins);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RAWOrderRT", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RAWOrderRTAsync(string ins);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RAWOrderDETR", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RAWOrderDETR(string ins);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RAWOrderDETR", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RAWOrderDETRAsync(string ins);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EtermOrderSoapChannel : Mzl.BLL.Tool.EtermCommand.EtermOrderSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EtermOrderSoapClient : System.ServiceModel.ClientBase<Mzl.BLL.Tool.EtermCommand.EtermOrderSoap>, Mzl.BLL.Tool.EtermCommand.EtermOrderSoap {
        
        public EtermOrderSoapClient() {
        }
        
        public EtermOrderSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EtermOrderSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EtermOrderSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EtermOrderSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Xml.XmlNode AVOrder(string start_city, string arrive_city, string date, string[] args, int id) {
            return base.Channel.AVOrder(start_city, arrive_city, date, args, id);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> AVOrderAsync(string start_city, string arrive_city, string date, string[] args, int id) {
            return base.Channel.AVOrderAsync(start_city, arrive_city, date, args, id);
        }
        
        public System.Xml.XmlNode FDOrder(string start_city, string arrive_city, string date, string airline, int id) {
            return base.Channel.FDOrder(start_city, arrive_city, date, airline, id);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> FDOrderAsync(string start_city, string arrive_city, string date, string airline, int id) {
            return base.Channel.FDOrderAsync(start_city, arrive_city, date, airline, id);
        }
        
        public System.Xml.XmlNode FFOrder(string airline, string date, int id) {
            return base.Channel.FFOrder(airline, date, id);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> FFOrderAsync(string airline, string date, int id) {
            return base.Channel.FFOrderAsync(airline, date, id);
        }
        
        public string SDOrder(string air_info, string person_info, string tktl_minutes, string[] args, int id) {
            return base.Channel.SDOrder(air_info, person_info, tktl_minutes, args, id);
        }
        
        public System.Threading.Tasks.Task<string> SDOrderAsync(string air_info, string person_info, string tktl_minutes, string[] args, int id) {
            return base.Channel.SDOrderAsync(air_info, person_info, tktl_minutes, args, id);
        }
        
        public string XEPNROrder(string pnr, string xeticketed, int id) {
            return base.Channel.XEPNROrder(pnr, xeticketed, id);
        }
        
        public System.Threading.Tasks.Task<string> XEPNROrderAsync(string pnr, string xeticketed, int id) {
            return base.Channel.XEPNROrderAsync(pnr, xeticketed, id);
        }
        
        public string ETDZOrder(string pnr, string officecode, string customercode, string printid, string[] args, int id) {
            return base.Channel.ETDZOrder(pnr, officecode, customercode, printid, args, id);
        }
        
        public System.Threading.Tasks.Task<string> ETDZOrderAsync(string pnr, string officecode, string customercode, string printid, string[] args, int id) {
            return base.Channel.ETDZOrderAsync(pnr, officecode, customercode, printid, args, id);
        }
        
        public string TSSOrder(string ticket, string mode, int id) {
            return base.Channel.TSSOrder(ticket, mode, id);
        }
        
        public System.Threading.Tasks.Task<string> TSSOrderAsync(string ticket, string mode, int id) {
            return base.Channel.TSSOrderAsync(ticket, mode, id);
        }
        
        public string PRINVOrder(string ticket, string ittn, string officecode, int id) {
            return base.Channel.PRINVOrder(ticket, ittn, officecode, id);
        }
        
        public System.Threading.Tasks.Task<string> PRINVOrderAsync(string ticket, string ittn, string officecode, int id) {
            return base.Channel.PRINVOrderAsync(ticket, ittn, officecode, id);
        }
        
        public string VTINVOrder(string ticket, string ittn, string officecode, int id) {
            return base.Channel.VTINVOrder(ticket, ittn, officecode, id);
        }
        
        public System.Threading.Tasks.Task<string> VTINVOrderAsync(string ticket, string ittn, string officecode, int id) {
            return base.Channel.VTINVOrderAsync(ticket, ittn, officecode, id);
        }
        
        public System.Xml.XmlNode RTOrder(string pnr, string hk, string get_ticket, string get_price, int id) {
            return base.Channel.RTOrder(pnr, hk, get_ticket, get_price, id);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> RTOrderAsync(string pnr, string hk, string get_ticket, string get_price, int id) {
            return base.Channel.RTOrderAsync(pnr, hk, get_ticket, get_price, id);
        }
        
        public System.Xml.XmlNode RTOrderMyUser(string pnr, string UserName, string UserPwd) {
            return base.Channel.RTOrderMyUser(pnr, UserName, UserPwd);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> RTOrderMyUserAsync(string pnr, string UserName, string UserPwd) {
            return base.Channel.RTOrderMyUserAsync(pnr, UserName, UserPwd);
        }
        
        public System.Xml.XmlNode RTUOrder(string pnr, int id) {
            return base.Channel.RTUOrder(pnr, id);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> RTUOrderAsync(string pnr, int id) {
            return base.Channel.RTUOrderAsync(pnr, id);
        }
        
        public System.Xml.XmlNode PATOrder(string pnr, int id) {
            return base.Channel.PATOrder(pnr, id);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> PATOrderAsync(string pnr, int id) {
            return base.Channel.PATOrderAsync(pnr, id);
        }
        
        public System.Xml.XmlNode PATOrderByCode(string pnr, int id, string clientCode) {
            return base.Channel.PATOrderByCode(pnr, id, clientCode);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> PATOrderByCodeAsync(string pnr, int id, string clientCode) {
            return base.Channel.PATOrderByCodeAsync(pnr, id, clientCode);
        }
        
        public System.Xml.XmlNode PATOrderNoCode(string pnr, int id) {
            return base.Channel.PATOrderNoCode(pnr, id);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> PATOrderNoCodeAsync(string pnr, int id) {
            return base.Channel.PATOrderNoCodeAsync(pnr, id);
        }
        
        public System.Xml.XmlNode PATEXOrder(string air_info, string officecode, string allprice, string apply, int id) {
            return base.Channel.PATEXOrder(air_info, officecode, allprice, apply, id);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> PATEXOrderAsync(string air_info, string officecode, string allprice, string apply, int id) {
            return base.Channel.PATEXOrderAsync(air_info, officecode, allprice, apply, id);
        }
        
        public System.Xml.XmlNode DETROrder(string ticket, int id) {
            return base.Channel.DETROrder(ticket, id);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> DETROrderAsync(string ticket, int id) {
            return base.Channel.DETROrderAsync(ticket, id);
        }
        
        public System.Xml.XmlNode DETNOrder(string ticket) {
            return base.Channel.DETNOrder(ticket);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> DETNOrderAsync(string ticket) {
            return base.Channel.DETNOrderAsync(ticket);
        }
        
        public string RAWOrder(string ins, int id) {
            return base.Channel.RAWOrder(ins, id);
        }
        
        public System.Threading.Tasks.Task<string> RAWOrderAsync(string ins, int id) {
            return base.Channel.RAWOrderAsync(ins, id);
        }
        
        public string RAWOrder255(string ins) {
            return base.Channel.RAWOrder255(ins);
        }
        
        public System.Threading.Tasks.Task<string> RAWOrder255Async(string ins) {
            return base.Channel.RAWOrder255Async(ins);
        }
        
        public string RAWOrderRT(string ins) {
            return base.Channel.RAWOrderRT(ins);
        }
        
        public System.Threading.Tasks.Task<string> RAWOrderRTAsync(string ins) {
            return base.Channel.RAWOrderRTAsync(ins);
        }
        
        public string RAWOrderDETR(string ins) {
            return base.Channel.RAWOrderDETR(ins);
        }
        
        public System.Threading.Tasks.Task<string> RAWOrderDETRAsync(string ins) {
            return base.Channel.RAWOrderDETRAsync(ins);
        }
    }
}
